#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define MO_TO(layer) &mto layer layer   // Macro to apply momentary-layer-on-hold/go-to-layer-on-tap
#define HYPER LA(LS(LC(LGUI))) // definition for a hyper key
#define MEH   LA(LS(LCTRL))    // definition for a meta key

#define DEFAULT 0
#define NUMB    1
#define SYMB    2
#define FUNC    3
#define EXP     4

#define LINUX_OS_LEAD &kp LC(LS(U))     // Linux specific sequence to initialize unicode
#define LINUX_OS_TRAIL &kp SPACE         // Linux specific sequence to terminate unicode
#define OS_LEAD LINUX_OS_LEAD
#define OS_TRAIL LINUX_OS_TRAIL

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };
    macros {
      euro: euro {
        wait-ms = <5>;
        tap-ms = <5>;
        compatible = "zmk,behavior-macro";
        label = "UC_EURO";
        #binding-cells = <0>;
        bindings = <OS_LEAD &kp N2 &kp N0 &kp A &kp C OS_TRAIL>;
      };
      pound: pound {
        wait-ms = <5>;
        tap-ms = <5>;
        compatible = "zmk,behavior-macro";
        label = "UC_POUND";
        #binding-cells = <0>;
        bindings = <OS_LEAD &kp A &kp N3 OS_TRAIL>;
      };
    };
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        mto: momentary_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMENTARY_TO";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&mo>, <&to>;
        };
        slk: shift_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_LOCK";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp CAPS>;
        };
        cur: currency {
            compatible = "zmk,behavior-tap-dance";
            label = "CURRENCY";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOLLAR>, <&pound>, <&euro>;
        };
    };
    /*                    KEY POSITIONS
      ╭────────────────────────╮ ╭────────────────────────╮
      │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
      │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
      │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
      ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                  ╰────────────╯ ╰────────────╯            */
    combos {
        compatible = "zmk,combos";
        combo_reset {
            timeout-ms = <50>;
            key-positions = <26 27 28 31 32 33>;
            bindings = <&to DEFAULT>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 3 4>;
            bindings = <&kp TAB>;
        };
        combo_bktab {
              timeout-ms = <50>;
              key-positions = <1 2 3 4>;
              bindings = <&kp LS(TAB)>;
          };
        combo_space {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&kp SPACE>;
        };^
        combo_bspcleft {
            timeout-ms = <50>;
            key-positions = <13 14 15 16>;
            bindings = <&kp BACKSPACE>;
        };
        combo_enterleft {
            timeout-ms = <50>;
            key-positions = <26 27 28>;
            bindings = <&kp ENTER>;
        };
        combo_caps {
            timeout-ms = <50>;
            key-positions = <25 26 27 28>;
            bindings = <&kp CAPS>;
        };
        combo_copy {
            timeout-ms = <50>;
            key-positions = <36 37 38>;
            bindings = <&kp LC(C)>;
        };
        combo_paste {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&kp LC(V)>;
        };

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <7 8 9>;
            bindings = <&kp BACKSPACE>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <19 20 21>;
            bindings = <&kp ENTER>;
        };
        combo_undo {
            timeout-ms = <50>;
            key-positions = <31 32 33>;
            bindings = <&kp LC(Z)>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |---|  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |---|  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |---|  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |---| ENT | RSE  | ALT |
            bindings = <
   &kp TAB    &kp Q &kp W &kp E &kp R &kp T       &kp Y   &kp U    &kp I     &kp O   &kp P    &bspc_del
   &kp LCTRL  &kp A &kp S &kp D &kp F &kp G       &kp H   &kp J    &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHIFT &kp Z &kp X &kp C &kp V &kp B       &kp N   &kp M    &kp COMMA &kp DOT &kp FSLH &kp ESC
                    &kp LGUI &mo NUMB &kp SPACE   &kp RET &mo SYMB &kp RALT
            >;
        };
        lower_layer {
            label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |    |  7  |  8  |  9  |    |---|       | Home  |  UP | PG_UP |      | BKSP   |
// | CTRL | 0  |  4  |  5  |  6  |    |---|       | LFT   | DWN | RGT   |      |        |
// | SHFT | 0  |  1  |  2  |  3  |    |---|       | End   | PRNT| PG_DN |      | ESC    |
//                   | GUI |     | SP |---| ENT   |       | ALT |
            bindings = <
   &kp TAB    &trans &kp N7   &kp N8    &kp N9  &trans     &trans  &kp HOME  &kp UP    &kp PG_UP  &trans    &bspc_del
   &kp LCTRL  &kp N0 &kp N4   &kp N5    &kp N6  &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans
   &kp LSHIFT &kp N0 &kp N1   &kp N2    &kp N3  &trans     &trans  &kp END   &kp PSCRN &kp PG_DN  &trans    &kp ESC
                              &kp LGUI  &trans  &kp SPACE  &kp RET &trans    &kp RALT
            >;
        };
        raise_layer {
            label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %   |---|  &  |  *  |  {  |  }  |  =  | BKSP |
// | CTRL |     |  =  |  *  |  +  |      |---|  _  |  -  |  (  |  )  |  \  |  `   |
// | SHFT |     |  _  |  /  |  -  |      |---|  ^  |  +  |  [  |  ]  | "|" |  ~   |
//                    | GUI |     |  SPC |---| ENT |     | ALT |
            bindings = <
   &kp  TAB   &kp EXCL &kp AT    &kp HASH &cur     &kp PRCNT   &kp AMPS  &kp STAR  &kp LBRC &kp RBRC &kp EQUAL &bspc_del
   &kp LCTRL  &kp STAR &kp PLUS  &trans   &trans   &trans      &kp UNDER &kp MINUS &kp LPAR &kp RPAR &kp BSLH  &kp GRAVE
   &kp LSHIFT &kp FSLH &kp MINUS &trans   &trans   &trans      &kp CARET &kp PLUS  &kp LBKT &kp RBKT &kp PIPE  &kp TILDE
                    	         &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };
        func_layer {
            label = "FUNC";
// -----------------------------------------------------------------------------------------
// |  TAB | F12 | F7 | F8 | F9 | LCLK |---| SCRLUP | LCLK | UP  | RCLK  | BTCLR | BT1 |
// | CTRL | F11 | F4 | F5 | F6 | MCLK |---| SCRLDN | LEFT | DN  | RIGHT | BT2   | BT3 |
// | SHFT | F10 | F1 | F2 | F3 | RCLK |---| EXP    |      |     |       | BT4   | BT5 |
//                  | GUI |    | SPC  |---| ENT    |      | ALT |
            bindings = <
   &kp  TAB    &kp F12 &kp F7 &kp F8   &kp F9  &mkp LCLK    &mwh SCROLL_UP   &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &bt BT_CLR   &bt BT_SEL 0
   &kp LCTRL   &kp F11 &kp F4 &kp F5   &kp F6  &mkp MCLK    &mwh SCROLL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &bt BT_SEL 1 &bt BT_SEL 2
   &kp LSHIFT  &kp F10 &kp F1 &kp F2   &kp F3  &mkp RCLK    &to EXP         &trans         &trans         &trans          &bt BT_SEL 3 &bt BT_SEL 4
                              &kp LGUI &trans  &kp SPACE    &kp RET          &trans         &kp RALT
            >;
        };
    };
    exp_layer {
        label = "EXP";
// -----------------------------------------------------------------------------------------
// |  TAB | F12 | F7 | F8 | F9 | LCLK |---| SCRLUP | LCLK | UP  | RCLK  | BTCLR | BT1 |
// | CTRL | F11 | F4 | F5 | F6 | MCLK |---| SCRLDN | LEFT | DN  | RIGHT | BT2   | BT3 |
// | SHFT | F10 | F1 | F2 | F3 | RCLK |---| EXP    |      |     |       | BT4   | BT5 |
//                  | GUI |    | SPC  |---| ENT    |      | ALT |
        bindings = <
            &kp  TAB    &kp F12 &kp F7 &kp F8   &kp F9  &mkp LCLK    &mwh SCROLL_UP   &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &bt BT_CLR   &bt BT_SEL 0
            &kp LCTRL   &kp F11 &kp F4 &kp F5   &kp F6  &mkp MCLK    &mwh SCROLL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &bt BT_SEL 1 &bt BT_SEL 2
            &kp LSHIFT  &kp F10 &kp F1 &kp F2   &kp F3  &mkp RCLK    &trans           &trans         &trans         &trans          &bt BT_SEL 3 &bt BT_SEL 4
                          &kp LGUI &trans  &kp SPACE    &kp RET          &trans         &kp RALT
        >;
    };
};
};

